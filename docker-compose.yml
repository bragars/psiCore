services:
#  mysql:
#    image: mysql:8.0
#    container_name: mysql_container
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: 123853
#      MYSQL_DATABASE: psic
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      - my_network
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092' # Porta para sua aplicação Spring se conectar
    environment:
      # --- Configuração do KRaft (Substitui o Zookeeper) ---
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # --- Configuração dos Listeners (Rede) ---
      # O Kafka escuta em duas portas: 9092 para clientes e 9093 para comunicação interna do controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # Anuncia para o mundo exterior (sua máquina host) que ele está em localhost:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092

      # --- Outras Configurações ---
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  # app:
  #   build: .
  #   container_name: spring_app
  #   restart: always
  #   depends_on:
  #     - mysql
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydatabase?useSSL=false&allowPublicKeyRetrieval=true
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: password
  #     SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - my_network

volumes:
  mysql_data:

networks:
  my_network:
