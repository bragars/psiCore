#====================================================
# Config Database
#====================================================
spring.datasource.url=jdbc:mysql://localhost:3306/psic
spring.datasource.username=myuser
spring.datasource.password=
# spring.datasource.username=root
# spring.datasource.password=123853
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.initialize=false

# Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#only in development
server.servlet.encoding.charset=UTF-8
server.port=8080
server.error.include-stacktrace=ON_PARAM
server.error.include-message=ALWAYS

application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#====================================================
# Security Config
#====================================================
# App Properties
#app.jwtSecret= 123456789
#app.jwtExpirationMs= 3600000

# Kafka Broker Location
spring.kafka.bootstrap-servers=localhost:9092

# --- Producer Configuration ---
# How to serialize the key and value of the message
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# --- Consumer Configuration ---
# A group ID is required for a consumer to subscribe to a topic
spring.kafka.consumer.group-id=psychology_app_group
# How to deserialize the key and value
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# This tells the JSON deserializer to trust all packages, useful for DTOs.
# For production, you can restrict this to your specific packages.
spring.kafka.consumer.properties.spring.json.trusted.packages=*
